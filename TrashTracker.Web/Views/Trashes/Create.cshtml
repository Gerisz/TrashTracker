@using TrashTracker.Data.Models.Enums
@using TrashTracker.Web.Utils
@model TrashFromUser

<div class="container">
    <h4>Új hulladékpont bejelentése</h4>
    <hr />
    @using (Html.BeginForm())
    {
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.TextBoxFor(_ => Model.Lat, "", new { @class = "form-control" })
                    @Html.LabelFor(_ => Model.Lat)
                </div>
                <div class="col">
                    @Html.TextBoxFor(_ => Model.Long, "", new { @class = "form-control" })
                    @Html.LabelFor(_ => Model.Long)
                </div>
            </div>
        </div>
        <div class="form-group">
            @foreach (var value in Enum.GetValues<Size>())
            {
                @Html.RadioButtonFor(m => m.Size, value, new { @class = "btn-check" })
                var displayValue = EnumHelper<Size>
                .GetDisplayValue(value);
                var displayIconClass = EnumHelper<Size>
                .GetDisplayIconClass(value);
                @Html.IconLabel(displayValue, displayIconClass,
                         new { @class = "btn btn-primary" })
            }
        </div>
        <div class="form-group">
            @foreach (var value in Model.Accessibilities)
            {
                @Html.CheckBoxFor(_ => value.IsSelected, new { @class = "btn-check" })
                var displayValue = EnumHelper<Accessibility>
                .GetDisplayValue(value.Value);
                var displayIconClass = EnumHelper<Accessibility>
                .GetDisplayIconClass(value.Value);
                @Html.IconLabel(displayValue, displayIconClass,
                         new { @class = "btn btn-primary" })
            }
        </div>
        <div class="form-group">
            @foreach (var value in Model.Types)
            {
                @Html.CheckBoxFor(_ => value.IsSelected, new { @class = "btn-check" })
                var displayValue = EnumHelper<TrashType>
                .GetDisplayValue(value.Value);
                var displayIconClass = EnumHelper<TrashType>
                .GetDisplayIconClass(value.Value);
                @Html.IconLabel(displayValue, displayIconClass,
                         new { @class = "btn btn-primary" })
            }
        </div>
        <div class="form-group">
            @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
            @Html.LabelFor(m => m.Note)
            @Html.ValidationMessageFor(m => m.Note, "", new { @class = "text-danger" })
        </div>
        <div class="form-group justify-content-right">
            <input type="submit" value="Bejelentés" class="btn btn-primary" />
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
