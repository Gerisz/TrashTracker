@using Microsoft.AspNetCore.Html
@using TrashTracker.Data.Models.Enums
@model Trash

@{
    ViewData["Title"] = "Részletek";
}

<div class="container">
    <h1>@Html.DisplayFor(_ => Model.Id). szemétpont</h1>
    <dl class="row">
        <dt class="col-sm-2">
            Forrás
        </dt>
        <dd class="col-sm-10">
            @(Model.TrashoutId != null
                ? Html.IconActionLink($"Trashout/{Model.TrashoutId}",
                "fa-solid fa-leaf",
                $"https://admin.trashout.ngo/trash-management/detail/{Model.TrashoutId}",
                new { @class = "btn btn-success" })
                : Html.IconActionLink($"{Html.DisplayFor(_ => Model.User!.UserName)}",
                "fa-solid fa-user",
                $"https://admin.trashout.ngo/trash-management/detail/{Model.TrashoutId}",
                new { @class = "btn btn-info" }))
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(_ => Model.Location.X)<br />
            @Html.DisplayFor(_ => Model.Location.Y)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Locality)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Country);
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UpdateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Note)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Status == 0)
            {
                <i><small>nincs megadva</small></i>
            }
            else
            {
                <span class="badge text-bg-primary">
                    <i class="@(EnumHelper<Status>.GetDisplayIconClass(Model.Status))"></i>
                    <br />
                    @Html.Raw(EnumHelper<Status>.GetDisplayValue(Model.Status))
                </span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Size)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Size == 0)
            {
                <i><small>nincs megadva</small></i>
            }
            else
            {
                <span class="badge text-bg-primary">
                    <i class="@(EnumHelper<Size>.GetDisplayIconClass(Model.Size))"></i>
                    <br />
                    @Html.Raw(EnumHelper<Size>.GetDisplayValue(Model.Size))
                </span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Types)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Types == 0)
            {
                <i><small>nincs megadva</small></i>
            }
            else
            {
                @foreach (var value in Enum.GetValues<TrashType>())
                {
                    if ((Model.Types & value) == value)
                    {
                        <span class="badge text-bg-primary">
                            <i class="@(EnumHelper<TrashType>.GetDisplayIconClass(value))"></i>
                            <br />
                            @Html.Raw(EnumHelper<TrashType>.GetDisplayValue(value))
                        </span>
                    }
                }
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Accessibilities)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Accessibilities == 0)
            {
                <i><small>nincs megadva</small></i>
            }
            else
            {
                @foreach (var value in Enum.GetValues<Accessibility>())
                {
                    if ((Model.Accessibilities & value) == value)
                    {
                        <span class="badge text-bg-primary">
                            <i class="@(EnumHelper<Accessibility>.GetDisplayIconClass(value))"></i>
                            <br />
                            @Html.Raw(EnumHelper<Accessibility>.GetDisplayValue(value))
                        </span>
                    }
                }}
        </dd>
    </dl>
    @Html.IconActionLink("Megtekintés térképen", "fa-solid fa-map-location-dot", "Index", "Home",
            new { lat = Model.Location.X, lon = Model.Location.Y, },
            new { @class = "btn btn-info" })
    <span data-bs-title="@(Model.TrashoutId != null
                   ? "Nem módosítható" : "")"
          data-bs-toggle="@(Model.TrashoutId != null ? "tooltip" : "")"
          data-bs-trigger="hover focus">
        @Html.IconActionLink("Módosítás", "fa-solid fa-pen-to-square", "Edit", "Trashes",
                 new { id = Model.Id },
                 Model.TrashoutId != null
                 ? new { @class = "btn btn-warning disabled" }
                 : new
                 {
                     @class = "btn btn-warning",
                     data_bs_toggle = "tooltip",
                     data_bs_title = "Módosítás"
                 })
    </span>
    <span data-bs-title="@(Model.TrashoutId != null
                   ? "Nem törölhető" : "")"
          data-bs-toggle="@(Model.TrashoutId != null ? "tooltip" : "")"
          data-bs-trigger="hover focus">
        @Html.IconActionLink("Törlés", "fa-solid fa-trash-can", "Delete", "Trashes",
                 new { id = Model.Id },
                 Model.TrashoutId != null
                 ? new { @class = "btn btn-danger disabled" }
                 : new
                 {
                     @class = "btn btn-danger",
                     data_bs_toggle = "tooltip",
                     data_bs_title = "Törlés"
                 })
    </span>
</div>
<div class="row">
    <div class="col-sm-6">
    </div>
</div>
